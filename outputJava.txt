eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("CITY_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("MSC_CODE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONNEC_REQUEST_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("REPORT_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SEIZ_SEC_NUM_L"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("LAST_DRC_CELL_L"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("LAST_DRC_SEC_L"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("ASS_CELL_ID_FOR_CONN_L"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("ASS_SEC_ID_FOR_CONN_L"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("LONGITUDE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LATITUDE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("GRID_ID_100"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("GRID_ID_1000"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("LAST_LONGITUDE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_LATITUDE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_GRID_ID_100"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("LAST_GRID_ID_1000"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("PCMD_VER"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SEQ_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("MONTH_DAY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("DUP_SEQ_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("MOBILE_ID_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("MOBILE_ID"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("IMSI"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("UATI"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("UATI_COMP_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RATI"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONTROL_AP_ADDR"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("SESS_REQ_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SESS_SFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SESS_OR_CONN_CPFAIL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SESS_SET_OR_TRA_REQ_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SESS_SET_OR_TRA_COMP_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONN_REQ_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONN_EST_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("A12_RAN_AUTH_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("A10_LINK_EST_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONN_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SECOND_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("AT_OR_AN_INT_CONN_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SILENT_REORG_FLAG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SERVICE_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("TP_FOR_CONN"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("PDSN_IP"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SEIZ_SEC_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_DRC_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_DRC_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("NUM_DO_PAGE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONF_NEGO_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONF_NEGO_FAIL_CODE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONF_NEGO_END_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SEIZ_BAND_CLASS"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SEIZ_CHAN_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ASSIG_BAND_CLASS"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ASSIG_CHAN_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("END_BAND_CLASS"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("END_CHAN_NUM"), bytes(KARL.randomInt), timestamp);

eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("CONN_EST"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RLP_BYTE_TRANS_TO_AT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RLP_BYTE_REC_FROM_AT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RLP_BYTE_RETRANS_TO_AT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RLP_BYTE_REREC_FROM_AT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("NUM_OF_SM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT4"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT5"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT6"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("PERSON_TYOE_USED"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RUM_DATA_STORE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RUM_DATA_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FLOW_DATA_INC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ACC_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_CELL_AP_ADDRES"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("LAST_ATT_PAGING_AREA"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("PAGING_PROFILE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("QOS_PAGE_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_SEEN_CELL_FOR_PAGE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_SEEN_SEC_FOR_PAGING"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("LAST_SEEN_RNC_FOR_PAGING"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CON_OHM_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("INIT_ACC_OHM_AP_ADD"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("INIT_ACC_OHM_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SUB_HOME_JUR_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SUB_HOME_INT_PRI"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ASS_CELL_ID_FOR_CONN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ASS_SEC_ID_FOR_CONN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT7"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT8"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT9"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ACC_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("PRI_REC_CREAT_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SPARE_PRI_01"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SPARE_PRI_02"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_BLOCK_USED"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_EVENT_CODE_1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_EVENT_OCC_TS_1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_EVENT_DATA_1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_EVENT_CODE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_EVENT_OCC_TS_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_EVENT_DATA_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SESS_SFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SESS_SECU"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_4"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_4"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_4"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_5"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_5"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_5"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_6"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_6"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_6"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_7"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_7"), bytes(KARL.randomInt), timestamp);

eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_7"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_8"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_8"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_8"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_9"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_9"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_9"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_10"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_10"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_10"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_11"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_11"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_11"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_12"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_12"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_12"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_13"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_13"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_13"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_CODE_14"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_TS_14"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("KPE_DATA_AREA_14"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ASSIG_CHAN_NUM_CARR_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("END_CHAN_NUM_CARR_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ASSIG_CHAN_NUM_CARR_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("END_CHAN_NUM_CARR_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT10"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT11"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT12"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT13"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT14"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("SM_CONUT15"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("CONNEC_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("DO_PRI_REC_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("DO_PRI_REC_SPARE_4"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("DO_PRI_REC_SPARE_5"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("DO_PRI_REC_SPARE_6"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("DO_PRI_REC_SPARE_7"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("ACS_SN_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("DOMAIN_NAME"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("AAA_SERVER"), bytes(KARL.randomString), timestamp);
usersWriter.addColumn(bytes("RD1_RUM_STO_TS"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_HO_ACT_BY_RUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NUM_NONREF_PLTS_IN_RUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_CELL_REF_PILOT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PILOT_SEC_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PILOT_RNC_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_SER_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PILOT_CARR_CHAN_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PILOT_BAND_CLASS"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PILOT_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PILOT_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_KEEP_IND_FOR_REF_PILOT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PLT_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PLT_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PLT_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PLT_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_REF_PLT_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_SPARE_RUM_REF_1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_DO_RUM_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_DO_RUM_SPARE_3"), bytes(KARL.randomInt), timestamp);

eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT1_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT2_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT3_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);

eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT4_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD1_NOREF_PLT5_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_RUM_STO_TS"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_HO_ACT_BY_RUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NUM_NONREF_PLTS_IN_RUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_CELL_REF_PILOT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PILOT_SEC_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PILOT_RNC_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_SER_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PILOT_CARR_CHAN_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PILOT_BAND_CLASS"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PILOT_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PILOT_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_KEEP_IND_FOR_REF_PILOT"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PLT_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PLT_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PLT_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PLT_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_REF_PLT_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_SPARE_RUM_REF_1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_DO_RUM_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_DO_RUM_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT1_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);

eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT2_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT3_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT4_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_CELL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_SEC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_RNC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_SERV_NODE_ID"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_CARR_CH_NUM"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_CARR_BAND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_PN"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_PN_STR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_KEEP_IND"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_PRE_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);

eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_POST_HO_EVA_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_HO_COMP_FLG"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_RTD"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_RTD_PRE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_SPARE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_DO_SPARE_2"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("RD2_NOREF_PLT5_DO_SPARE_3"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD1_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD2_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD3_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD4_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);

eventWriter.newRow(uuid);
usersWriter.addColumn(bytes("STARTTIME"), bytes(KARL.GETSTARTTIME), timestamp);
usersWriter.addColumn(bytes("SEIZ_CELL_NUM"), bytes(KARL.GETSOURCENUMBER), timestamp);
usersWriter.addColumn(bytes("FD5_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD5_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD6_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD7_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_RESER_REQ_TIME_REC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_RESER_LABAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_RESER_TYPE_REQ"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_RESER_ON_REQ_CHAN_TYPE"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_RESER_DENY"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_RESER_FLOW_DIR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_FLOW_EVENT_STAR_TIME"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_FLOW_EVENT_DUR"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_FFC"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_FLOW_CFC_QUAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_FLOW_CPFAIL_VAL"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("FD8_SPARE_FLOW1"), bytes(KARL.randomInt), timestamp);
usersWriter.addColumn(bytes("constraint"), bytes(KARL.randomInt), timestamp);
